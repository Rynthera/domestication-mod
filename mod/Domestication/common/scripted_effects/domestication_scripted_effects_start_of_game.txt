generate_start_pops = {
	optimize_memory
	# SECONDARY SPECIES STARTS: add Traits, set living standards, etc.
	if = {
		limit = {
			owner = {
				OR = {
					has_origin = origin_syncretic_evolution
					has_origin = origin_necrophage
					has_origin = origin_domesticators
					has_valid_civic = civic_machine_servitor
					has_valid_civic = civic_machine_assimilator
					has_valid_civic = civic_hive_bodysnatcher
				}
			}
		}

		if = { # Machines: Add 'Machine' Trait
			limit = {
				last_created_species = { is_species_class = MACHINE }
			}
			modify_species = {
				species = last_created_species
				add_trait = trait_machine_unit
				add_traits_at_start_of_list = yes
			}
			last_created_species = {
				save_event_target_as = last_created_species
			}
		}

		# Syncretic Evolution & Necrophage: set flag & citizenship type; (Necrophage) spawn prepatent Pops
		if = {
			limit = {
				owner = {
					OR = {
						has_origin = origin_syncretic_evolution
						has_origin = origin_necrophage
						has_origin = origin_domesticators
					}
				}
			}

			last_created_species = {
				set_species_flag = syncretic_species@root.owner
				if = {
					limit = {
						prev.owner = {
							AND = {
								has_origin = origin_syncretic_evolution
								#NOT = { has_valid_civic = civic_domesticators }
							}
						}
					}
					set_citizenship_type = {
						country = root.owner
						type = citizenship_slavery
					}
				}
				else_if = {
					limit = {
						prev.owner = {
							#AND = {
								has_origin = origin_domesticators
								#has_valid_civic = civic_domesticators
							#}
						}
					}
					set_citizenship_type = {
						country = root.owner
						type = citizenship_limited
					}
					set_living_standard = {
						country = root.owner
						type = living_standard_chemical_bliss
					}
					set_military_service_type = {
						country = root.owner
						type = military_service_none
					}
					set_colonization_controls = {
						country = root.owner
						type = colonization_control_no
					}
				}
			}
			if = {
				limit = {
					owner = {
						has_origin = origin_necrophage
						OR = {
							has_valid_civic = civic_fanatic_purifiers
							has_valid_civic = civic_hive_devouring_swarm
							is_gestalt = yes
						}
					}
				}
				create_pop_group = {
					size = 600
					species = last_created_species
				}
			}
			else_if = {
				limit = {
					owner = {
						has_origin = origin_necrophage
						is_gestalt = yes
					}
				}
				create_pop_group = {
					size = 900
					species = last_created_species
				}
			}
			else = {
				create_pop_group = {
					size = 1200
					species = last_created_species
				}
			}
		}
		generate_civic_secondary_pops = yes
		make_nascent_starting_pops = yes
	}

	# Mechanist: spawn robot Pops; add Job-specific Traits; spawn Robot Assembly Plant
	if = {
		limit = {
			owner = { has_origin = origin_mechanists }
		}
		owner = {
			create_built_robot_species = yes
		}
		last_created_species = {
			change_species_characteristics = {
				add_trait = trait_auto_mod_robotic
			}
		}
		create_pop_group = {
			size = 800
			species = last_created_species
		}
		while = {
			limit = { pop_amount < 2700 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}

	# MISC: spawn Pops
	if = {
		limit = {
			owner = {
				is_hive_empire = yes
				is_wilderness_empire = no
			}
		}
		while = {
			limit = { pop_amount < 3300 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = {
			owner = { has_valid_civic = civic_machine_servitor }
		}
		while = {
			limit = { pop_amount < 3300 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = { owner = { is_machine_empire = yes } }
		while = {
			limit = { pop_amount < 2900 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_megacorp = yes
				has_reduced_pop_origin = no
			}
		}
		while = {
			limit = { pop_amount < 2800 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_broken_shackles }
			pop_amount < 600
		}

		while = {
			limit = { pop_amount < 600 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = {
			owner = {
				is_regular_empire = yes
				has_reduced_pop_origin = no
			}
		}
		while = {
			limit = { pop_amount < 2800 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_payback }
			pop_amount < 1800
		}
		while = {
			limit = { pop_amount < 1800 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_fear_of_the_dark }
		}
		while = {
			limit = { pop_amount < 2000 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}
	if = {
		limit = { #homicidal necrophages lose 1/4 of their necrophytes to fleeing
			owner = {
				has_origin = origin_necrophage
				is_homicidal = yes
			}
		}
		create_pop_group = {
			size = 200
			species = owner_main_species
		}
	}
	if = {
		limit = {
			owner = { has_origin = origin_default }
		}
		create_pop_group = {
			size = 400
			species = owner_main_species
		}
	}
	if = {
		limit = {
			owner = {
				is_eager_explorer_empire = yes
			}
		}
		while = {
			count = 10
			random_owned_pop_group = {
				limit = {
					is_same_species = root.owner.species
				}
				kill_single_pop = yes
			}
		}
	}

	if = {
		limit = {
			exists = owner
			owner = {
				has_origin = origin_toxic_knights
			}
		}
		while = { #they get the habitat
			count = 11
			random_owned_pop_group = { kill_single_pop = yes }
		}
	}

	# Nascent Stage pops being generated
	make_nascent_starting_pops = yes

	# Permanent Employment: add Zombie Trait
	if = {
		limit = {
			owner = {
				has_civic = civic_permanent_employment
			}
		}
		while = {
			count = 4
			random_owned_pop_group = { kill_single_pop = yes }
		}
		create_zombie_pop_group = {
			SIZE = 400
		}
	}

	# Civilians
	if = {
		limit = {
			owner =  {
				NOR = {
					has_origin = origin_broken_shackles
					is_wilderness_empire = yes
				}
			}
		}
		while = {
			count = @civilians_counter
			create_pop_group = {
				size = @civilians_gamestart
				species = owner_main_species
			}
		}
	}

	# Wilderness
	if = {
		limit = {
			owner = { is_wilderness_empire = yes }
		}
		while = {
			limit = { pop_amount < 2000 }
			create_pop_group = {
				species = owner_main_species
			}
		}
	}

	# Cybernetic Creed: add Unique Traits
	if = {
		limit = {
			owner = {
				has_origin = origin_cybernetic_creed
			}
		}
		while = {
			limit = {
				any_owned_pop_group = {
					is_robotic_species = no
					has_ethic = ethic_spiritualist
					has_cybernetic_creed_trait = no
				}
			}
			weighted_random_owned_pop_group = {
				limit = {
					is_robotic_species = no
					has_ethic = ethic_spiritualist
					has_cybernetic_creed_trait = no
				}
				modify_species = {
					species = this
					add_trait = trait_cyborg_ritualistic_implants
					add_traits_at_start_of_list = yes
				}
			}
		}
		owner = {
			set_policy = {
				policy = robot_pop_policy
				option = robot_pops_allowed
				cooldown = no
			}
		}
	}

	#Synthetic Fertility
	if = {
		limit = {
			owner = { has_origin = origin_synthetic_fertility }
		}
		create_pop_group = {
			size = 900
			species = owner_main_species
		}
	}
}