############################
#
# Domestication Leader Events
#
# Written by Colleen Arkadija
#
############################

namespace = domestication_leader

# gatekeeper event for level-up florets
country_event = {
	id = domestication_leader.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# Do not add floret if leader already has 2
		from = {
			OR = {
				NOT = { is_variable_set = floret_count }
				check_variable = {
					which = floret_count
					value < 2
				}
			}
		}
	}

	immediate = {
		#random_owned_leader = {
		#	limit = {
		#		leader_class = governor
		#	}
		#	save_event_target_as = guvna
		#}
		#event_target:guvna = {
		from = {
			if = {
				limit = {
					leader_class = scientist
					NOT = {	has_leader_flag = has_gained_level_floret	}
				}
				random_list = {
					90 = { }
					10 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = admiral
					NOT = { has_leader_flag = has_gained_level_floret }
				}
				random_list = {
					90 = { }
					10 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = governor
					NOT = { has_leader_flag = has_gained_level_floret }
					#exists = planet
				}
				random_list = {
					80 = { }
					20 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = general
					NOT = { has_leader_flag = has_gained_level_floret }
				}
				random_list = {
					80 = { }
					20 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = ruler
					NOT = { has_leader_flag = has_gained_level_floret }
				}
				random_list = {
					80 = { }
					20 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						#add_random_leader_floret_trait = yes
						#set_leader_flag = has_gained_level_floret
					}
				}
			}
		}
	}
}

## Create floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.2
	title = domestication_leader.2.name

	desc = domestication_leader.2.desc

	picture = GFX_evt_emergency_workers

	hide_window = no
	is_triggered_only = yes

	trigger = {
		this = { is_domesticator_or_protectorate = yes }
		# defeated country is default country type
		from = {
			is_country_type = default
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_warp_eng_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
	}

	immediate = {
		#fromfrom = {
		#	solar_system = { save_event_target_as = system }
		#	leader = { save_event_target_as = new_owner	}
		#}
		#from = {
		#	save_event_target_as = defeated_country
		#}

		event_target:new_owner = {
			## Up to 2 florets - for the moment

			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}

			add_trait = leader_trait_warp_eng_adm
			add_ruler_trait = leader_trait_warp_eng_rul

			## generate new leader of species matching primary species of defeated fleet
			owner = {
				event_target:floret_country = {
					create_leader = {
						name = random
						species = event_target:defeated_country.owner_species
						class = admiral
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
					}
					last_created_leader = {
						save_event_target_as = new_floret
						add_trait = leader_trait_warp_eng_adm
						add_trait = leader_trait_floret_immortal
					}
				}
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = owner.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = owner.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				change_variable = {
					which = floret_index
					value = 1
				}
			}
		}
	}

	option = {
		name = domestication_leader.2.a
		trigger = {
			always = yes
		}
	}
}

# Create random floret from level-up
country_event = {
	id = domestication_leader.3
	title = domestication_leader.3.name
	desc = {
		trigger = {
			hidden:event_target:new_owner = {
				switch = {
					trigger = has_leader_flag
					gained_leader_trait_cutie_sci = { text = domestication_leader.new_cutie_sci }
					gained_leader_trait_cutie_adm = { text = domestication_leader.new_cutie_adm }
					gained_leader_trait_cutie_gov = { text = domestication_leader.new_cutie_gov }
					gained_leader_trait_beeple_gov = { text = domestication_leader.new_beeple_gov }
					gained_leader_trait_cutie_gen = { text = domestication_leader.new_cutie_gen }
					default = { text = "domestication_leader.3.fallback" }
				}
			}
		}
	}

	location = event_target:current_location
	picture = GFX_evt_acquire_asset
	is_triggered_only = yes

	immediate = {
		event_target:new_owner = {
			## Up to 2 florets - for the moment

			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}


			## generate new leader of species matching biological pop in empire
			owner = {
				random_owned_pop = {
					limit = {
						has_job = floret
					}
					save_event_target_as = floret_species
				}
				event_target:floret_country = {
					create_leader = {
						name = random
						species = event_target:floret_species
						class = governor
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
						immortal = yes
					}
					last_created_leader = {
						save_event_target_as = new_floret
						switch = {
							trigger = event_target:new_owner = { has_leader_flag }
							gained_leader_trait_cutie_sci = { add_trait = leader_trait_cutie_sci  }
							gained_leader_trait_cutie_adm = { add_trait = leader_trait_cutie_adm }
							gained_leader_trait_cutie_gov = { add_trait = leader_trait_cutie_gov }
							gained_leader_trait_beeple_gov = { add_trait = leader_trait_beeple_gov }
							gained_leader_trait_cutie_gen = { add_trait = leader_trait_cutie_gen }
						}
						add_trait = leader_trait_floret_immortal
					}
				}
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = owner.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = owner.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				change_variable = {
					which = floret_index
					value = 1
				}
			}
		}
	}

	option = {
		name = domestication_leader.3.a
		trigger = {
			always = yes
		}
	}
}

## Create pirate floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.4
	title = domestication_leader.4.name

	desc = domestication_leader.4.desc

	picture = GFX_evt_exploding_ship

	hide_window = no
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# defeated fleet has an admiral
		#fromfromfrom = {
		#	exists = leader
		#}
		# defeated country is pirate country type
		from = {
			is_country_type = pirate
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_pirate_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
		#always = yes
	}

	immediate = {
		#fromfrom = {
		#	solar_system = { save_event_target_as = system }
		#	leader = { save_event_target_as = new_owner	}
		#}
		#from = {
		#	save_event_target_as = defeated_country
		#}
		#fromfromfrom = {
		#	leader = { save_event_target_as = new_floret }
		#}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			event_target:floret_country = {
				create_leader = {
					name = random
					species = event_target:defeated_country.owner_species
					class = governor
					leader_age_min = 20
					leader_age_max = 40
					skill = 1
				}
				last_created_leader = {
					save_event_target_as = new_floret
					add_trait = leader_trait_pirate_adm
					add_trait = leader_trait_floret_immortal
				}
			}
			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}

			add_trait = leader_trait_pirate_adm
			add_ruler_trait = leader_trait_pirate_rul

			#event_target:new_floret = {
			#	set_owner = event_target:floret_country
			#}

			## generate new leader of species matching primary species of defeated fleet
			owner = {
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = root.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = root.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				change_variable = {
					which = floret_index
					value = 1
				}
			}
		}
	}

	option = {
		name = domestication_leader.4.a
		trigger = {
			always = yes
		}
	}
}

## Create admiral floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.5
	title = domestication_leader.5.name

	desc = domestication_leader.5.desc

	picture = GFX_evt_exploding_ship

	hide_window = no
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# defeated fleet has an admiral
		fromfromfrom = {
			exists = leader
		}
		# defeated country is default country type
		from = {
			is_country_type = default
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
		#always = yes
	}

	immediate = {
		fromfrom = {
			solar_system = { save_event_target_as = system }
			leader = { save_event_target_as = new_owner	}
		}
		from = {
			save_event_target_as = defeated_country
		}
		fromfromfrom = {
			leader = { save_event_target_as = new_floret }
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			#event_target:floret_country = {
			#	create_leader = {
			#		name = random
			#		species = event_target:defeated_country.owner_species
			#		class = governor
			#		leader_age_min = 20
			#		leader_age_max = 40
			#		skill = 1
			#	}
			#	last_created_leader = {
			#		save_event_target_as = new_floret
			#	}
			#}
			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = owner.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}

			add_trait = leader_trait_admiral_adm
			add_ruler_trait = leader_trait_admiral_rul

			event_target:new_floret = {
				set_owner = event_target:floret_country
				add_trait = leader_trait_admiral_adm
				add_trait = leader_trait_floret_immortal
			}

			owner = {
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = root.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = root.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				change_variable = {
					which = floret_index
					value = 1
				}
			}
		}
	}

	option = {
		name = domestication_leader.5.a
		trigger = {
			always = yes
		}
	}
}

# gatekeeper event for florets from combat
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (defeated)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# Do not add floret if leader already has 2
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
	}

	immediate = {
		fromfrom = {
			solar_system = { save_event_target_as = system }
			leader = { save_event_target_as = new_owner }
		}
		from = {
			save_event_target_as = defeated_country
		}
		event_target:new_owner = {
			random_list = {
				150 = {
					modifier = {
						factor = 0.67
						has_level = 3
					}
					modifier = {
						factor = 0.2
						has_level = 4
					}
					modifier = {
						factor = 0.1
						has_level > 4
					}
				}
				3 = {
					modifier = {
						factor = 0
						has_trait = leader_trait_warp_eng_adm
					}
					owner = { domestication_leader.2 }
				}
				3 = {
					modifier = {
						factor = 0
						OR = {
							has_trait = leader_trait_pirate_adm
							NOT = {
								event_target:defeated_country = {
									is_country_type = pirate
								}
							}
						}
					}
					owner = { domestication_leader.4 }
				}
			}

		}
	}
}
