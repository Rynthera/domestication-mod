############################
#
# Domestication Leader Events
#
# Written by Colleen Arkadija
#
############################

namespace = domestication_leader

# gatekeeper event for level-up florets
country_event = {
	id = domestication_leader.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_full_protectorate = yes
		any_owned_pop_group = {
			is_pop_category = floret_strata
		}
		# Do not add floret if leader already has 2
		from = {
			# not new leaders
			has_base_skill > 1
			# not pool leaders
			owner = {
				any_owned_leader = {
					is_same_value = prevprev
				}
			}
			NOT = {
				owner = {
					any_pool_leader = {
						is_same_value = prevprev
					}
				}
			}
			# Do not add floret if leader already has 2
			can_obtain_new_floret = yes
		}
	}

	immediate = {
		#random_owned_leader = {
		#	limit = {
		#		leader_class = official
		#	}
		#	save_event_target_as = guvna
		#}
		#event_target:guvna = {
		reroll_random = yes
		from = {
			if = {
				limit = {
					leader_class = scientist
					NOT = {	has_leader_flag = has_gained_level_floret	}
				}
				random_list = {
					90 = { }
					10 = {
						modifier = {
							factor = 1.5
							has_base_skill = 3
						}
						modifier = {
							factor = 2.5
							has_base_skill = 4
						}
						modifier = {
							factor = 5
							has_base_skill > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = commander
					NOT = { has_leader_flag = has_gained_level_floret }
				}
				random_list = {
					90 = { }
					10 = {
						modifier = {
							factor = 1.5
							has_base_skill = 3
						}
						modifier = {
							factor = 2.5
							has_base_skill = 4
						}
						modifier = {
							factor = 5
							has_base_skill > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = official
					NOT = { has_leader_flag = has_gained_level_floret }
					#exists = planet
				}
				random_list = {
					80 = { }
					20 = {
						modifier = {
							factor = 1.5
							has_base_skill = 3
						}
						modifier = {
							factor = 2.5
							has_base_skill = 4
						}
						modifier = {
							factor = 5
							has_base_skill > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
		}
	}
}

## Create floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.2
	title = domestication_leader.2.name

	desc = domestication_leader.2.desc

	picture = GFX_evt_emergency_workers
	show_sound = event_airlock

	hide_window = no
	is_triggered_only = yes

	trigger = {
		this = { is_domesticator_or_protectorate = yes }
		# defeated country is default country type
		from = {
			is_country_type = default
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_warp_eng_floret }
				can_obtain_new_floret = yes
			}
		}
	}

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	immediate = {
		fromfrom = {
			solar_system = { save_event_target_as = system }
			leader = { save_event_target_as = new_owner	}
		}
		from = {
			save_event_target_as = defeated_country
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment

			floret_count_increment = yes

			add_trait = leader_trait_warp_eng_floret

			## generate new leader of species matching primary species of defeated fleet
			owner = {
				event_target:floret_country = {
					create_leader = {
						name = random
						species = event_target:defeated_country.owner_species
						class = commander
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
					}
					last_created_leader = {
						save_event_target_as = new_floret
						add_trait = leader_trait_warp_eng_floret
						add_trait = leader_trait_floret_immortal
					}
				}
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.2.a
		trigger = {
			always = yes
		}
	}
}

# Create random floret from level-up
country_event = {
	id = domestication_leader.3
	title = domestication_leader.3.name
	desc = {
		trigger = {
			hidden:event_target:new_owner = {
				switch = {
					trigger = has_leader_flag
					gained_leader_trait_cutie_floret = { text = domestication_leader.new_cutie_floret }
					gained_leader_trait_beeple_floret = { text = domestication_leader.new_beeple_gov }
					gained_leader_trait_distracted_floret = { text = domestication_leader.new_distracted_sci }
					gained_leader_trait_liaison_floret = { text = domestication_leader.new_liason_gov }
					gained_leader_trait_brainslug_sci = { text = domestication_leader.new_brainslug_sci }
					gained_leader_trait_brainslug_gov = { text = domestication_leader.new_brainslug_gov }
					gained_leader_trait_brainslug_adm = { text = domestication_leader.new_brainslug_adm }
					gained_leader_trait_brainslug_gen = { text = domestication_leader.new_brainslug_gen }
					gained_leader_trait_class_o_floret = { text = domestication_leader.new_class_o_gen }
					gained_leader_trait_musician_floret = { text = domestication_leader.new_musician_adm }
					gained_leader_trait_historian_floret = { text = domestication_leader.new_historian_sci }
					gained_leader_trait_underground_gen = { text = domestication_leader.new_underground_gen }
					gained_leader_trait_underground_gov = { text = domestication_leader.new_underground_gov }
					default = { text = "domestication_leader.3.fallback" }
				}
			}
		}
	}

	location = event_target:current_location
	picture = GFX_evt_acquire_asset
	is_triggered_only = yes
	show_sound = event_default

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	immediate = {
		event_target:new_owner = {
			## Up to 2 florets - for the moment

			floret_count_increment = yes

			## generate new leader of species matching biological pop in empire
			owner = {
				weighted_random_owned_pop_group = {
					limit = {
						is_pop_category = floret_strata
						OR = {
							AND = {
								event_target:new_owner = {
									has_leader_flag = gained_leader_trait_beeple_floret
								}
								has_trait = trait_syncretic_proles
							}
							AND = {
								event_target:new_owner = {
									has_leader_flag = gained_leader_trait_class_o_floret
								}
								NOT = { has_trait = trait_syncretic_proles }
							}
							AND = {
								event_target:new_owner = {
									OR = {
										has_leader_flag = gained_leader_trait_brainslug_gov
										has_leader_flag = gained_leader_trait_brainslug_gen
										has_leader_flag = gained_leader_trait_brainslug_adm
										has_leader_flag = gained_leader_trait_brainslug_sci
									}
								}
								has_trait = trait_brainslug
							}
							AND = {
								event_target:new_owner = {
									OR = {
										has_leader_flag = gained_leader_trait_underground_gov
										has_leader_flag = gained_leader_trait_underground_gen
									}
								}
								has_trait = trait_cave_dweller
							}
							event_target:new_owner = {
								NOR = {
									has_leader_flag = gained_leader_trait_brainslug_gov
									has_leader_flag = gained_leader_trait_brainslug_gen
									has_leader_flag = gained_leader_trait_brainslug_adm
									has_leader_flag = gained_leader_trait_brainslug_sci
									has_leader_flag = gained_leader_trait_beeple_floret
									has_leader_flag = gained_leader_trait_class_o_floret
									has_leader_flag = gained_leader_trait_underground_gov
									has_leader_flag = gained_leader_trait_underground_gen
								}
							}
						}
					}
					save_event_target_as = floret_species
				}
				event_target:floret_country = {
					create_leader = {
						name = random
						species = event_target:floret_species
						class = official
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
						immortal = yes
					}
					last_created_leader = {
						save_event_target_as = new_floret
						event_target:new_owner = {
							if = {
								limit = { has_leader_flag = gained_leader_trait_cutie_floret }
								event_target:new_floret = { add_trait = leader_trait_cutie_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_beeple_floret }
								event_target:new_floret = { add_trait = leader_trait_beeple_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_distracted_floret }
								event_target:new_floret = { add_trait = leader_trait_distracted_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_liaison_floret }
								event_target:new_floret = { add_trait = leader_trait_liaison_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_brainslug_gov }
								event_target:new_floret = { add_trait = leader_trait_brainslug_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_brainslug_adm }
								event_target:new_floret = { add_trait = leader_trait_brainslug_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_brainslug_gen }
								event_target:new_floret = { add_trait = leader_trait_brainslug_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_brainslug_sci }
								event_target:new_floret = { add_trait = leader_trait_brainslug_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_class_o_floret }
								event_target:new_floret = { add_trait = leader_trait_class_o_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_historian_floret }
								event_target:new_floret = { add_trait = leader_trait_historian_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_musician_floret }
								event_target:new_floret = { add_trait = leader_trait_musician_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_underground_gen }
								event_target:new_floret = { add_trait = leader_trait_underground_floret }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_underground_gov }
								event_target:new_floret = { add_trait = leader_trait_underground_floret }
							}
						}
						add_trait = leader_trait_floret_immortal
					}
				}

				if = {
					limit = {
						event_target:new_owner = {
							OR = {
								has_leader_flag = gained_leader_trait_brainslug_sci
								has_leader_flag = gained_leader_trait_brainslug_gen
								has_leader_flag = gained_leader_trait_brainslug_adm
								has_leader_flag = gained_leader_trait_brainslug_gov
							}
						}
					}
					floret_rename_brainslug = yes
				}
				else = {
					floret_rename_single = yes
				}
			}
		}
	}

	option = {
		name = domestication_leader.3.a
		trigger = {
			always = yes
		}
	}
}

## Create pirate floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.4
	title = domestication_leader.4.name

	desc = domestication_leader.4.desc

	picture = GFX_evt_exploding_ship

	hide_window = no
	is_triggered_only = yes
	show_sound = event_airlock

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		is_domesticator_or_protectorate = yes
		# defeated fleet has an admiral
		#fromfromfrom = {
		#	exists = leader
		#}
		# defeated country is pirate country type
		from = {
			is_country_type = pirate
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_pirate_floret }
				can_obtain_new_floret = yes
			}
		}
		#always = yes
	}

	immediate = {
		fromfrom = {
			leader = { save_event_target_as = new_owner	}
		}
		from = {
			save_event_target_as = defeated_country
		}
		#fromfromfrom = {
		#	leader = { save_event_target_as = new_floret }
		#}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			event_target:floret_country = {
				create_leader = {
					name = random
					species = event_target:defeated_country.owner_species
					class = official
					leader_age_min = 20
					leader_age_max = 40
					skill = 1
				}
				last_created_leader = {
					save_event_target_as = new_floret
					add_trait = leader_trait_pirate_floret
					add_trait = leader_trait_floret_immortal
				}
			}
			floret_count_increment = yes

			add_trait = leader_trait_pirate_floret

			#event_target:new_floret = {
			#	set_owner = event_target:floret_country
			#}

			## generate new leader of species matching primary species of defeated fleet
			owner = {
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.4.a
		trigger = {
			always = yes
		}
	}
}

## Create admiral floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.5
	title = domestication_leader.5.name

	desc = domestication_leader.5.desc

	picture = GFX_evt_exploding_ship
	show_sound = event_airlock

	hide_window = no
	is_triggered_only = yes

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		is_domesticator_or_protectorate = yes
		# defeated fleet has an admiral
		fromfromfrom = {
			exists = leader
		}
		# defeated country is default country type
		from = {
			is_country_type = default
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_floret }
				can_obtain_new_floret = yes
			}
		}
		#always = yes
	}

	immediate = {
		fromfrom = {
			solar_system = { save_event_target_as = system }
			leader = { save_event_target_as = new_owner	}
		}
		from = {
			save_event_target_as = defeated_country
		}
		fromfromfrom = {
			leader = { save_event_target_as = new_floret }
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			#event_target:floret_country = {
			#	create_leader = {
			#		name = random
			#		species = event_target:defeated_country.owner_species
			#		class = official
			#		leader_age_min = 20
			#		leader_age_max = 40
			#		skill = 1
			#	}
			#	last_created_leader = {
			#		save_event_target_as = new_floret
			#	}
			#}
			floret_count_increment = yes

			add_trait = leader_trait_admiral_floret

			event_target:new_floret = {
				set_owner = event_target:floret_country
				add_trait = leader_trait_admiral_floret
				add_trait = leader_trait_floret_immortal
			}

			owner = {
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.5.a
		trigger = {
			always = yes
		}
	}
}

# gatekeeper event for florets from combat
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (defeated)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# Do not add floret if leader already has 2
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_floret }
				can_obtain_new_floret = yes
			}
		}
	}

	immediate = {
		fromfrom = {
			solar_system = { save_event_target_as = system }
			leader = { save_event_target_as = new_owner }
		}
		from = {
			save_event_target_as = defeated_country
		}
		event_target:new_owner = {
			random_list = {
				150 = {
					modifier = {
						factor = 0.67
						has_base_skill = 3
					}
					modifier = {
						factor = 0.2
						has_base_skill = 4
					}
					modifier = {
						factor = 0.1
						has_base_skill > 4
					}
				}
				3 = {
					modifier = {
						factor = 0
						has_trait = leader_trait_warp_eng_floret
					}
					owner = { country_event = { id = domestication_leader.2 } }
				}
				3 = {
					modifier = {
						factor = 0
						OR = {
							has_trait = leader_trait_pirate_floret
							NOT = {
								event_target:defeated_country = {
									is_country_type = pirate
								}
							}
						}
					}
					owner = { country_event = { id = domestication_leader.4 } }
				}
			}
		}
	}
}

# when new Affini leader spawns, give them random bloom num and append to name
# scope: country, from: leader
country_event = {
	id = domestication_leader.7
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = {
			has_global_flag = no_bloom_naming
		}
		OR = {
			AND = {
				is_domesticator = yes
				from = {
					NOT = { has_leader_flag = bloom_initialized }
					is_same_species = root
					NOT = { is_same_value = root.ruler }
					is_event_leader = no
				}
			}
			AND = {
				is_domesticated_protectorate = yes
				from = {
					NOT = { has_leader_flag = bloom_initialized }
					is_same_species = root.overlord
					NOT = { is_same_value = root.ruler }
					is_event_leader = no
				}
			}
		}

	}

	immediate = {
		log_error = "setting leader bloom - [from.GetName]"
		from = { leader_event = { id = domestication_leader.13 } }
	}
}

# set leader bloom for all leaders
country_event = {
	id = domestication_leader.8
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		root = {
			AND = {
				is_domesticator_or_protectorate = yes
				any_owned_leader = {
					OR = {
						is_same_value = root.ruler
						exists = fleet
					}
				}
			}
		}
	}

	immediate = {
		remove_global_flag = no_bloom_naming
		every_owned_leader = {
			limit = {
				OR = {
					is_same_value = root.ruler
					exists = fleet
				}
			}
			leader_event = { id = domestication_leader.13 }
		}
	}
}

# Randomize bloom number
leader_event = {
	id = domestication_leader.9
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		random_list = {
			5 = {
				set_variable = {
					which = bloom_number
					value = 1
				}
			}
			10 = {
				set_variable = {
					which = bloom_number
					value = 2
				}
			}
			15 = {
				set_variable = {
					which = bloom_number
					value = 3
				}
			}
			10 = {
				set_variable = {
					which = bloom_number
					value = 4
				}
			}
			5 = {
				set_variable = {
					which = bloom_number
					value = 5
				}
			}
			3 = {
				set_variable = {
					which = bloom_number
					value = 6
				}
			}
			2 = {
				set_variable = {
					which = bloom_number
					value = 7
				}
			}
			2 = {
				set_variable = {
					which = bloom_number
					value = 8
				}
			}
			1 = {
				set_variable = {
					which = bloom_number
					value = 9
				}
			}
			1 = {
				set_variable = {
					which = bloom_number
					value = 10
				}
			}
		}
		reroll_random = yes
		random_list = {
			10 = {}
			1 = {
				change_variable = {
					which = bloom_number
					value = 10
				}
			}
			1 = {
				change_variable = {
					which = bloom_number
					value = 20
				}
			}
		}

		set_variable = {
			which = bloom_last_digit
			value = this.bloom_number
		}
		while = {
			limit = {
				check_variable = {
					which = bloom_last_digit
					value > 10
				}
			}
			subtract_variable = {
				which = bloom_last_digit
				value = 10
			}
		}
		round_variable = bloom_number
		round_variable = bloom_last_digit

		leader_event = { id = domestication_leader.11 }
	}
}

# Bloom cleanup
leader_event = {
	id = domestication_leader.10
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		#save_event_target_as = bloom_leader
		log_error = "[root.GetName] - [root.bloom_number]"
		#event_target:bloom_leader = { rename_bloom = yes}

		# Uncomment this
		rename_bloom = yes


		#log_error = "[root.GetName]"
		#set_name = "[root.GetName], [root.bloom_number][root.GetBloomOrdinal] Bloom"
		set_leader_flag = bloom_initialized

		## rebloom

	}
}

# Create copy of bloom leader in bloom country
leader_event = {
	id = domestication_leader.11
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		if = {
			limit = {
				species = {
					NOT = { has_species_flag = affini_species }
				}
			}
			species = {
				set_species_flag = affini_species
			}
		}


		if = {
			limit = {
				NOT = {
					has_global_flag = bloom_country_created
				}
			}
			owner = {
				country_event = { id = domestication_start_of_game.3 }
			}
		}

		set_variable = {
	    which = bloom_id
	    value = event_target:bloom_country.bloom_index
	  }

		if = {
			limit = {
				leader_class = scientist
			}
			event_target:bloom_country = {
				create_leader = {
					name = random
					species = root
					class = scientist
					set_age = 0
					skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
					event_leader = yes
				}
			}
		}
		else_if = {
	    limit = {
	      leader_class = official
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = official
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
					event_leader = yes
	      }
	    }
	  }
	  else_if = {
	    limit = {
	      leader_class = commander
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = commander
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
					event_leader = yes
	      }
	    }
	  }
		else_if = {
	    limit = {
	      leader_class = envoy
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = envoy
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
					event_leader = yes
	      }
	    }
	  }
#		else_if = {
#	    limit = {
#	      leader_class = ruler
#	    }
#	    event_target:bloom_country = {
#	      create_leader = {
#	        name = random
#	        species = root
#	        class = official
#	        set_age = 0
#	        skill = 1
#					effect = {
#						save_event_target_as = clone_bloom
#					}
#	      }
#	    }
#	  }
		last_created_leader = {
			set_owner = event_target:bloom_country
		}

		root = {
			set_name = {
				key = domestication.new_bloom_name_set
				variable_string = "[clone_bloom.GetName]"
			}
		}

		event_target:clone_bloom = {
			#set_name = {
			#	key = domestication.bloom_name_set
			#	variable_string = "\\[root.GetName\\]"
			#}
			add_trait = leader_trait_floret_immortal
			set_variable = {
				which = bloom_id
				value = event_target:bloom_country.bloom_index
			}
		}

	  event_target:bloom_country = {
	    change_variable = {
	      which = bloom_index
	      value = 1
	    }
	  }

	  leader_event = { id = domestication_leader.10 }

	}
}

# Reblooms leader
# Executed as a leader has died
# This = Country
# From = Leader
country_event = {
	id = domestication_leader.12
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			has_leader_flag = bloom_initialized
			is_variable_set = bloom_id
			is_pool_leader = no
			NOT = { leader_class = envoy }
			leader_years_of_service >= 2
			NOT = {
				has_leader_flag = leader_death_events_blocked
			}
			leader_is_affini = yes
		}
	}

	immediate = {
		from = { save_event_target_as = old_bloom }
		random_list = {
			# Leader reblooms
			60 = {
				country_event = {
					id = domestication_leader.15
					scopes = { from = from }
				}
			}
			# Leader reblooms if they have less than 2 florets
			20 = {
				if = {
					limit = {
						from = {
							check_variable = {
								which = floret_count
								value < 2
							}
						}
					}
					country_event = {
						id = domestication_leader.15
						scopes = { from = from }
					}
				}
				else = {
					country_event = {
						id = domestication_leader.26
						scopes = { from = from }
					}
				}
			}
			# Leader does not rebloom
			20 = {
				country_event = {
					id = domestication_leader.26
					scopes = { from = from }
				}
			}
		}
	}
}

leader_event = {
	id = domestication_leader.13
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_flag = bloom_country_created
				}
			}

			create_country = {
				name = "Bloom Country"
				type = floret_repo
				auto_delete = no
				flag = random
			}
			last_created_country = {
				save_global_event_target_as = bloom_country
				set_variable = {
					which = bloom_index
					value = 0
				}
			}
			set_global_flag = bloom_country_created
		}

		if = {
			limit = {
				host_has_dlc = "Plantoids Species Pack"
			}
			random_list = {
				2 = {}
				1 = {
					affini_portrait_swap = yes
				}
			}
		}

		leader_event = { id = domestication_leader.9 }
	}
}

# Create floret from defecting asset
country_event = {
	id = domestication_leader.14
	title = domestication_leader.14.name
	desc = {
		trigger = {
			hidden:event_target:new_owner_country = {
				switch = {
					trigger = has_country_flag
					disavowed_floret_attache = { text = domestication_leader.new_attache }
					disavowed_floret_economist = { text = domestication_leader.new_economist }
					disavowed_floret_officer = { text = domestication_leader.new_officer }
					disavowed_floret_scientist = { text = domestication_leader.new_scientist }
					default = { text = "domestication_leader.14.fallback" }
				}
			}
		}
	}

	location = event_target:current_location
	picture = GFX_evt_acquire_asset
	is_triggered_only = yes
	show_sound = event_spymaster

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	immediate = {

		switch = {
			trigger = has_country_flag
			disavowed_floret_attache = {
			# General
				if = {
					limit = {
						any_owned_leader = {
							leader_class = commander
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_attache_floret }
						}

					}
					random_owned_leader = {
						limit = {
							leader_class = commander
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_attache_floret }
						}
						save_event_target_as = new_owner
					}
				}
			}
			disavowed_floret_economist = {
			# Governor
				if = {
					limit = {
						any_owned_leader = {
							leader_class = official
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_economist_floret }
						}
					}
					random_owned_leader = {
						limit = {
							leader_class = official
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_economist_floret }
						}
						save_event_target_as = new_owner
					}
				}
			}
			disavowed_floret_officer = {
			# Admiral
				if = {
					limit = {
						any_owned_leader = {
							leader_class = commander
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_officer_floret }
						}
					}
					random_owned_leader = {
						limit = {
							leader_class = commander
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_officer_floret }
						}
						save_event_target_as = new_owner
					}
				}
			}
			disavowed_floret_scientist = {
			# Scientist
				if = {
					limit = {
						any_owned_leader = {
							leader_class = scientist
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_academic_floret }
						}
					}
					random_owned_leader = {
						limit = {
							leader_class = scientist
							can_obtain_new_floret = yes
							NOT = { has_trait = leader_trait_academic_floret }
						}
						save_event_target_as = new_owner
					}
				}
			}
			default = {}
		}

		if = {
			limit = { exists = event_target:new_owner }

			event_target:new_owner = {
				## Up to 2 florets - for the moment

				floret_count_increment = yes

				## generate new leader of species matching biological pop in empire
				owner = {

					event_target:disavowed_floret = {
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						save_event_target_as = new_floret
						root = {
							if = {
								limit = { has_country_flag = disavowed_floret_attache }
								event_target:new_floret = { add_trait = leader_trait_attache_floret }
								event_target:new_owner = { add_trait = leader_trait_attache_floret }
							}
							if = {
								limit = { has_country_flag = disavowed_floret_economist }
								event_target:new_floret = { add_trait = leader_trait_economist_floret }
								event_target:new_owner = { add_trait = leader_trait_economist_floret }
							}
							if = {
								limit = { has_country_flag = disavowed_floret_officer }
								event_target:new_floret = { add_trait = leader_trait_officer_floret }
								event_target:new_owner = { add_trait = leader_trait_officer_floret }
							}
							if = {
								limit = { has_country_flag = disavowed_floret_scientist }
								event_target:new_floret = { add_trait = leader_trait_academic_floret }
								event_target:new_owner = { add_trait = leader_trait_academic_floret }
							}
						}
						add_trait = leader_trait_floret_immortal
					}
				}

				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.14.a
		trigger = {
			always = yes
		}
		end_event_chain = operative_resurfaces_chain
	}
}

# Reblooms leader
# Executed as a leader has died
# This = Country
# From = Leader
country_event = {
	id = domestication_leader.15
	is_triggered_only = yes

	title = "domestication_leader.15.name"
	picture = GFX_evt_news_room
	show_sound = event_life_support_fail

	desc = {
		trigger = {
			# one floret
			exists = event_target:floret_1
			event_target:floret_1 = {
				NOT = { has_leader_flag = flag_florets_pinnate }
			}
			NOT = { exists = event_target:floret_2 }
		}
		text = "domestication_leader.15.desc.1"
	}
	desc = {
		trigger = {
			# two pinnate florets
			exists = event_target:floret_1
			event_target:floret_1 = {
				has_leader_flag = flag_florets_pinnate
			}
			NOT = { exists = event_target:floret_2 }
		}
		text = "domestication_leader.15.desc.2"
	}
	desc = {
		trigger = {
			# multiple florets
			exists = event_target:floret_1
			exists = event_target:floret_2
		}
		text = "domestication_leader.15.desc.3"
	}
	desc = {
		trigger = {
			# zero florets
			NOT = { exists = event_target:floret_1 }
		}
		text = "domestication_leader.15.desc.0"
	}

	#hide_window = yes

	trigger = {
		from = {
			has_leader_flag = bloom_initialized
			is_variable_set = bloom_id
		}
		NOT = {
			any_pool_leader = {
				is_same_value = FROM
			}
		}
	}

	immediate = {
		from = { save_event_target_as = old_bloom }


		if = {
			limit = {
				event_target:old_bloom = {
					is_variable_set = affini_id_1
				}
			}
			event_target:floret_country = {
				every_owned_leader = {
					limit = {
						is_variable_set = floret_id
						check_variable = {
							which = floret_id
							value = event_target:old_bloom.affini_id_1
						}
					}
					save_event_target_as = floret_1
				}
			}
		}
		if = {
			limit = {
				event_target:old_bloom = {
					is_variable_set = affini_id_2
				}
			}
			event_target:floret_country = {
				every_owned_leader = {
					limit = {
						is_variable_set = floret_id
						check_variable = {
							which = floret_id
							value = event_target:old_bloom.affini_id_2
						}
					}
					save_event_target_as = floret_2
				}
			}
		}

		event_target:bloom_country = {
			every_owned_leader = {
				limit = {
					is_variable_set = bloom_id
					check_variable = {
						which = bloom_id
						value = event_target:old_bloom.bloom_id
					}
				}
				save_event_target_as = clone_bloom
			}

			if = {
				limit = {
					event_target:old_bloom = {
						gender = male
						leader_class = scientist
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = male
						class = scientist
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = male
						leader_class = official
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = male
						class = official
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = male
						leader_class = commander
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = male
						class = commander
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = female
						leader_class = scientist
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = female
						class = scientist
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = female
						leader_class = official
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = female
						class = official
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = female
						leader_class = commander
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = female
						class = commander
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = indeterminable
						leader_class = scientist
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = indeterminable
						class = scientist
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = indeterminable
						leader_class = official
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = indeterminable
						class = official
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}
			else_if = {
				limit = {
					event_target:old_bloom = {
						gender = indeterminable
						leader_class = commander
					}
				}
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = indeterminable
						class = commander
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
			}

			if = {
				limit = { exists = event_target:new_bloom }
				event_target:new_bloom = {
					set_name = {
						key = domestication.new_bloom_name_set
						variable_string = "[clone_bloom.GetName]"
					}
					set_variable = {
						which = bloom_id
						value = event_target:old_bloom.bloom_id
					}
					set_variable = {
						which = bloom_number
						value = event_target:old_bloom.bloom_number
					}
					change_variable = {
						which = bloom_number
						value = 1
					}
					event_target:old_bloom = {
						if = {
							limit = {	is_variable_set = floret_count }
							event_target:new_bloom = {
								set_variable = {
									which = floret_count
									value = event_target:old_bloom.floret_count
								}
							}
						}
						if = {
							limit = {	is_variable_set = floret_trait_count }
							event_target:new_bloom = {
								set_variable = {
									which = floret_trait_count
									value = event_target:old_bloom.floret_trait_count
								}
							}
						}
						if = {
							limit = {	is_variable_set = affini_id_1	}
							event_target:new_bloom = {
								set_variable = {
									which = affini_id_1
									value = event_target:old_bloom.affini_id_1
								}
							}
						}
						if = {
							limit = {	is_variable_set = affini_id_2 }
							event_target:new_bloom = {
								set_variable = {
									which = affini_id_2
									value = event_target:old_bloom.affini_id_2
								}
							}
						}
						if = {
							limit = { has_leader_flag = has_gained_level_floret }
							event_target:new_bloom = { set_leader_flag = has_gained_level_floret }
						}
					}

					set_variable = {
						which = bloom_last_digit
						value = bloom_number
					}
					while = {
						limit = {
							check_variable = {
								which = bloom_last_digit
								value > 10
							}
						}
						subtract_variable = {
							which = bloom_last_digit
							value = 10
						}
					}
					round_variable = bloom_number
					round_variable = bloom_last_digit

					event_target:old_bloom = {
						switch = {
							trigger = has_base_skill
							10 > { event_target:new_bloom = { set_skill = 9 } }
							9 > { event_target:new_bloom = { set_skill = 8 } }
							8 > { event_target:new_bloom = { set_skill = 7 } }
							7 > { event_target:new_bloom = { set_skill = 6 } }
							6 > { event_target:new_bloom = { set_skill = 5 } }
							5 > { event_target:new_bloom = { set_skill = 4 } }
							4 > { event_target:new_bloom = { set_skill = 3 } }
							3 > { event_target:new_bloom = { set_skill = 2 } }
							default = { event_target:new_bloom = { set_skill = 1 } }
						}
					}
					copy_leader_traits = yes

					if = {
						limit = {
							host_has_dlc = "Plantoids Species Pack"
						}
						random_list = {
							1 = {}
							1 = {
								affini_portrait_swap = yes
							}
						}
					}

					leader_event = { id = domestication_leader.10 }
				}
			}
		}
	}

	option = {
		name = domestication_leader.15.a
		trigger = {
			always = yes
		}
	}
}

## Create Warform floret
# This = owner of fleet
country_event = {
	id = domestication_leader.16
	title = domestication_leader.16.name

	desc = domestication_leader.16.desc

	picture = GFX_evt_sapient_AI
	show_sound = event_metal_fatigue

	hide_window = no
	is_triggered_only = yes

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		is_domesticator_or_protectorate = yes
		# admiral has < 2 florets
		any_owned_leader = {
			leader_class = commander
			NOT = { has_trait = leader_trait_warform_floret }
			can_obtain_new_floret = yes
		}

	}

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = commander
				NOT = { has_trait = leader_trait_warform_floret }
				can_obtain_new_floret = yes
			}
			save_event_target_as = new_owner
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			floret_count_increment = yes

			add_trait = leader_trait_warform_floret

			#event_target:new_floret = {
			#	set_name = "NAME_S8751"
			#	add_trait = leader_trait_floret_immortal
			#	set_owner = event_target:floret_country
			#}

			owner = {
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.16.a
		trigger = {
			always = yes
		}
	}
}

country_event = {
	id = domestication_leader.17
	title = "distar.158.name"
	desc = "domestication_leader.17.desc"
	location = event_target:repaired_warform

	diplomatic = yes

	is_triggered_only = yes
	show_sound = event_default

	picture_event_data = {
		portrait = event_target:warform_leader
		room = ethic_spaceship_room
	}

  option = {
		name = "domestication_leader.17.a"
		trigger = {
			is_domesticator_or_protectorate = yes
      any_owned_leader = {
        NOT = { has_trait = leader_trait_warform_floret }
        can_obtain_new_floret = yes
      }
		}
		hidden_effect = {
			event_target:floret_country = {
				clone_leader = {
					target = event_target:warform_leader
					class = commander
					effect = {
						add_trait = leader_trait_floret_immortal
						add_trait = leader_trait_warform_floret
						save_event_target_as = new_floret
					}
				}
				create_leader = {
					name = NAME_S8751
					species = event_target:warform_species
					class = commander
					gender = indeterminable
					immortal = yes
					skill = 1
					effect = {
						save_event_target_as = new_floret
						add_trait = leader_trait_warform_floret
						add_trait = leader_trait_floret_immortal
						set_age = 1578
					}
				}
				#last_created_leader = {
				#	save_event_target_as = new_floret
				#	add_trait = leader_trait_ahab_floret
				#	add_trait = leader_trait_floret_immortal
				#}
			}
		}
		delete_fleet = event_target:repaired_warform
    #event_target:warform_leader = {
    #  save_event_target_as = new_floret
    #}
    hidden_effect = { country_event = { id = domestication_leader.16 } }
	}
}

# Floret Setup for Dathnak/Baldarak
country_event = {
	id = domestication_leader.18
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		set_country_flag = dathnak_florets

		# create Dathnak species
		create_species = {
			name = dathnak_species
			plural = dathnak_species_plural
			adjective = dathnak_species_adjective
			class = ROBOT
			portrait = default_robot
			namelist = "AI"
			traits = {
				trait = random_traits
			}
			effect = {
				save_global_event_target_as = dathnak_species
			}
		}

		# if event scientist can get a new floret, get new floret
		if = {
			limit = {
				event_target:new_owner = {
					can_obtain_new_floret = yes
				}
			}
			country_event = { id = domestication_leader.19 }
		}
	}
}

# Create new (1st time) Dathnak floret
country_event = {
	id = domestication_leader.19
	title = domestication_leader.19.name

	desc = domestication_leader.19.desc

	picture = GFX_evt_emergency_workers
	show_sound = event_airlock

	hide_window = no
	is_triggered_only = yes

	trigger = {
		always = yes
	}

	immediate = {

		event_target:new_owner = {
			## Up to 2 florets - for the moment

			floret_count_increment = yes

			add_trait = leader_trait_dathnak_floret

			## generate new leader of species matching primary species of defeated fleet
			owner = {
				event_target:floret_country = {
					create_leader = {
						name = DATHNAK_CHR_Zakty
						species = event_target:dathnak_species
						class = scientist
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
					}
					last_created_leader = {
						save_event_target_as = new_floret
						add_trait = leader_trait_dathnak_floret
						add_trait = leader_trait_floret_immortal
					}
				}

				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.19.a
		trigger = {
			always = yes
		}
	}
}

country_event = {
	id = domestication_leader.20
	title = domestication_leader.20.name

	desc = domestication_leader.20.desc

	picture = GFX_evt_society_research
	show_sound = event_laboratory_sound

	hide_window = no
	is_triggered_only = yes

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		this = { is_domesticator_or_protectorate = yes }
	}

	immediate = {
		event_target:new_owner = {
			## Up to 2 florets - for the moment

			floret_count_increment = yes

			add_trait = leader_trait_brainslug_floret

			## generate new leader of species of volunteer
			owner = {
				event_target:floret_country = {
					create_leader = {
						name = random
						species = event_target:brain_slug_floret.species
						class = scientist
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
						effect = {
							save_event_target_as = new_floret
						}
					}
					last_created_leader = {
						add_trait = leader_trait_brainslug_floret
						add_trait = leader_trait_floret_immortal
					}
				}
				floret_rename_brainslug = yes
			}
		}
	}

	option = {
		name = domestication_leader.20.a
		trigger = {
			always = yes
		}
	}
}

## Create Stranded Scientist floret
# This = owner of fleet
country_event = {
	id = domestication_leader.21
	title = domestication_leader.21.name

	desc = domestication_leader.21.desc

	picture = GFX_evt_emergency_workers
	show_sound = event_airlock

	hide_window = no
	is_triggered_only = yes

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		is_domesticator_or_protectorate = yes
		# scientist has < 2 florets
		any_owned_leader = {
			leader_class = scientist
			NOT = { has_trait = leader_trait_stranded_floret }
			can_obtain_new_floret = yes
		}

	}

	immediate = {

		if = {
			limit = {
				event_target:new_owner = {
					OR = {
						can_obtain_new_floret = no
						has_trait = leader_trait_stranded_floret
					}
				}
			}
			random_owned_leader = {
				limit = {
					leader_class = scientist
					NOT = { has_trait = leader_trait_stranded_floret }
					can_obtain_new_floret = yes
				}
				save_event_target_as = new_owner
			}
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			floret_count_increment = yes

			add_trait = leader_trait_stranded_floret

			#event_target:new_floret = {
			#	set_name = "NAME_S8751"
			#	set_owner = event_target:floret_country
			#}

			owner = {
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.21.a
		trigger = {
			always = yes
		}
	}
}

## Create Racket floret
# This = owner of fleet
country_event = {
	id = domestication_leader.22
	title = domestication_leader.22.name

	desc = domestication_leader.22.desc

	picture = GFX_evt_acquire_asset
	show_sound = event_finding_loot

	hide_window = no
	is_triggered_only = yes

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		is_domesticator_or_protectorate = yes
		# scientist has < 2 florets
		any_owned_leader = {
			leader_class = official
			NOT = { has_trait = leader_trait_racket_floret }
			can_obtain_new_floret = yes
		}

	}

	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = official
				NOT = { has_trait = leader_trait_racket_floret }
				can_obtain_new_floret = yes
			}
			save_event_target_as = new_owner
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			floret_count_increment = yes

			add_trait = leader_trait_racket_floret

			#event_target:new_floret = {
			#	set_name = "NAME_S8751"
			#	set_owner = event_target:floret_country
			#}

			owner = {
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.22.a
		trigger = {
			always = yes
		}
	}
}

## Create stranded warrior floret
# This = country
country_event = {
	id = domestication_leader.23
	title = domestication_leader.23.name

	desc = domestication_leader.23.desc

	picture = GFX_evt_acquire_asset
	show_sound = event_ghost_town

	hide_window = no
	is_triggered_only = yes

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		is_domesticator_or_protectorate = yes
		# scientist has < 2 florets
		any_owned_leader = {
			leader_class = official
			NOT = { has_trait = leader_trait_cryopod_floret }
			can_obtain_new_floret = yes
		}

	}

	immediate = {
		event_target:floret_country = {
			create_leader = {
				class = official
				species = event_target:AlienWarriorSpecies
				name = "NAME_Majula_the_Bearer"
				traits = {
					trait = leader_trait_butcher
				}
				event_leader = yes
			}
			last_created_leader = {
				save_event_target_as = new_floret
				add_trait = leader_trait_cryopod_floret
				add_trait = leader_trait_floret_immortal
			}
		}


		random_owned_leader = {
			limit = {
				leader_class = official
				NOT = { has_trait = leader_trait_cryopod_floret }
				can_obtain_new_floret = yes
			}
			save_event_target_as = new_owner
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			floret_count_increment = yes

			add_trait = leader_trait_cryopod_floret

			#event_target:new_floret = {
			#	set_name = "NAME_S8751"
			#	set_owner = event_target:floret_country
			#}

			owner = {
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = domestication_leader.23.a
		trigger = {
			always = yes
		}
	}
}

#Dialogue End Gain New General
country_event = {
	id = domestication_leader.24
	title = "anomaly.4157.name"
	diplomatic_title = BLANK_STRING
	desc = "domestication_leader.24.desc"
	location = event_target:HomePlanet

	is_triggered_only = yes
	diplomatic = yes

	picture_event_data = {
		portrait = event_target:AlienWarriorSpecies
		planet_background = event_target:HomePlanet
		graphical_culture = event_target:HomePlanet
		city_level = event_target:HomePlanet
		room = event_target:AlienWarriorSpecies.ruler
	}

	option = {
		name = domestication_leader.24.a
		country_event = { id = domestication_leader.23}
	}
}

## Create Ahab floret
# This = country
country_event = {
	id = domestication_leader.25
	title = domestication_leader.25.name

	desc = domestication_leader.25.desc

	picture = GFX_evt_acquire_asset
	show_sound = event_airlock

	hide_window = no
	is_triggered_only = yes

	event_window_type = leader_story
	event_picture_background = "GFX_leader_recruitment_bg_renowned"

	picture_event_data = {
		portrait = event_target:new_floret
	}

	trigger = {
		is_domesticator_or_protectorate = yes
		# scientist has < 2 florets
		any_owned_leader = {
			leader_class = commander
			NOT = { has_trait = leader_trait_ahab_floret }
			can_obtain_new_floret = yes
		}

	}

	immediate = {

		event_target:floret_country = {
			create_leader = {
				name = NAME_Reth_Unddol_first_name
				species = event_target:captain_species
				gender = male
				class = official
				leader_age_min = 20
				leader_age_max = 40
				skill = 1
			}
			last_created_leader = {
				save_event_target_as = new_floret
				add_trait = leader_trait_ahab_floret
				add_trait = leader_trait_floret_immortal
			}
		}

		random_owned_leader = {
			limit = {
				leader_class = commander
				NOT = { has_trait = leader_trait_ahab_floret }
				can_obtain_new_floret = yes
			}
			save_event_target_as = new_owner
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			floret_count_increment = yes

			add_trait = leader_trait_ahab_floret

			#event_target:new_floret = {
			#	set_name = "NAME_S8751"
			#	set_owner = event_target:floret_country
			#}

			owner = {
				floret_rename_single = yes
			}
		}
	}

	option = {
		name = WONDERFUL
		trigger = {
			always = yes
		}
	}
}

# Leader retires at rebloom
# From = Leader (old bloom)
country_event = {
	id = domestication_leader.26
	title = "domestication_leader.26.name"
	is_triggered_only = yes
	picture = GFX_evt_news_room
	show_sound = event_life_support_fail

	desc = {
		trigger = {
			# one floret
			exists = event_target:floret_1
			event_target:floret_1 = {
				NOT = { has_leader_flag = flag_florets_pinnate }
			}
			NOT = { exists = event_target:floret_2 }
		}
		text = "domestication_leader.26.desc.1"
	}
	desc = {
		trigger = {
			# two pinnate florets
			exists = event_target:floret_1
			event_target:floret_1 = {
				has_leader_flag = flag_florets_pinnate
			}
			NOT = { exists = event_target:floret_2 }
		}
		text = "domestication_leader.26.desc.2"
	}
	desc = {
		trigger = {
			# multiple florets
			exists = event_target:floret_1
			exists = event_target:floret_2
		}
		text = "domestication_leader.26.desc.3"
	}
	desc = {
		trigger = {
			# zero florets
			NOT = { exists = event_target:floret_1 }
		}
		text = "domestication_leader.26.desc.0"
	}

	trigger = {
		always = yes
	}

	immediate = {
		from = { save_event_target_as = old_bloom }
		event_target:bloom_country = {
			every_owned_leader = {
				limit = {
					is_variable_set = bloom_id
					check_variable = {
						which = bloom_id
						value = event_target:old_bloom.bloom_id
					}
				}
				save_event_target_as = clone_bloom
			}
		}
		if = {
			limit = {
				event_target:old_bloom = {
					is_variable_set = affini_id_1
				}
			}
			event_target:floret_country = {
				every_owned_leader = {
					limit = {
						is_variable_set = floret_id
						check_variable = {
							which = floret_id
							value = event_target:old_bloom.affini_id_1
						}
					}
					save_event_target_as = floret_1
				}
			}
		}
		if = {
			limit = {
				event_target:old_bloom = {
					is_variable_set = affini_id_2
				}
			}
			event_target:floret_country = {
				every_owned_leader = {
					limit = {
						is_variable_set = floret_id
						check_variable = {
							which = floret_id
							value = event_target:old_bloom.affini_id_2
						}
					}
					save_event_target_as = floret_2
				}
			}
		}
	}

	option = {
		name = domestication_leader.26.a
		add_modifier = {
			modifier = affini_retirement
			years = 5
		}
	}
}
